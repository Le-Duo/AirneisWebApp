diff --git a/src/App.tsx b/src/App.tsx
index ca44336..af1bccf 100644
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -1,31 +1,33 @@
-import { Container, Navbar, NavbarBrand, Nav, Badge } from 'react-bootstrap'
-import { Outlet } from 'react-router-dom'
+import { Container, Navbar, NavbarBrand, Nav, Badge, Button, Offcanvas } from 'react-bootstrap'
+import { Outlet, Link as RouterLink, useLocation } from 'react-router-dom'
 import { ToastContainer } from 'react-toastify'
 import 'react-toastify/dist/ReactToastify.css'
 import { Store } from './Store'
-import { useContext } from 'react'
-import { useEffect } from 'react'
-import { Button } from 'react-bootstrap'
+import { useContext, useEffect } from 'react'
 import '@fortawesome/fontawesome-free/css/all.min.css'
 import { LinkContainer } from 'react-router-bootstrap'
-import Offcanvas from 'react-bootstrap/Offcanvas'
 import { useMediaQuery } from 'react-responsive'
-import { Link } from 'react-router-dom'
+import { useGetCategoriesQuery } from './hooks/categoryHook'
+import useScrollToTop from './hooks/useScrollToTop'; // Adjust the path according to your file structure
 
 function App() {
+  useScrollToTop(); 
+
   const {
     state: { mode, cart, userInfo },
     dispatch,
   } = useContext(Store)
 
-  const isDesktopOrLaptop = useMediaQuery({
-    query: '(min-width: 1224px)',
+  const isDesktopOrPhone = useMediaQuery({
+    query: '(min-width: 992px)',
   })
 
   useEffect(() => {
     document.body.setAttribute('data-bs-theme', mode)
   }, [mode])
 
+  const { data: categories } = useGetCategoriesQuery() // Fetch categories
+
   const switchModeHandler = () => {
     dispatch({ type: 'SWITCH_MODE' })
   }
@@ -39,6 +41,9 @@ function App() {
     window.location.href = '/'
   }
 
+  const location = useLocation();
+  const isBackoffice = location.pathname.startsWith('/backoffice');
+
   return (
     <>
       <div className='d-flex flex-column vh-100'>
@@ -156,29 +161,63 @@ function App() {
             <Outlet />
           </Container>
         </main>
-        <footer>
-          {isDesktopOrLaptop && (
-            <div className='desktop-footer'>
-              <div className='icon-links'>
-                <a href='https://facebook.com/airneis' target='_blank' rel='noopener noreferrer'>
-                  <i className='fab fa-facebook-f'></i>
-                </a>
-                <a href='https://twitter.com/airneis' target='_blank' rel='noopener noreferrer'>
-                  <i className='fab fa-twitter'></i>
-                </a>
-                <a href='https://instagram.com/airneis' target='_blank' rel='noopener noreferrer'>
-                  <i className='fab fa-instagram'></i>
-                </a>
-              </div>
-              <div className='text-links'>
-                <Link to='/tos'>Terms of Service</Link>
-                <Link to='/legal-notice'>Legal Notice</Link>
-                <Link to='/contact'>Contact</Link>
-              </div>
-            </div>
+        {!isBackoffice && (
+          <footer>
+            {isDesktopOrPhone && (
+              <div className="container pt-5">
+                <div className="row">
+                  <div className="col-6 col-md-2 mb-3">
+                    <h5>Sections</h5>
+                    <ul className="nav flex-column">
+                      <li className="nav-item mb-2"><RouterLink to="/" className="nav-link p-0 text-body-secondary">Home</RouterLink></li>
+                      <li className="nav-item mb-2"><RouterLink to="/tos" className="nav-link p-0 text-body-secondary">Terms of Services</RouterLink></li>
+                      <li className="nav-item mb-2"><RouterLink to="/legal-notice" className="nav-link p-0 text-body-secondary">Legal Notice</RouterLink></li>
+                      <li className="nav-item mb-2"><RouterLink to="/contact" className="nav-link p-0 text-body-secondary">Contact</RouterLink></li>
+                      <li className="nav-item mb-2"><RouterLink to="/about" className="nav-link p-0 text-body-secondary">About</RouterLink></li>
+                    </ul>
+                  </div>
+                  <div className="col-6 col-md-2 mb-3">
+                    <h5>Shop</h5>
+                    <ul className="nav flex-column">
+                      <li className="nav-item mb-2"><RouterLink to="/search" className="nav-link p-0 text-body-secondary">Search</RouterLink></li>
+                      <li className="nav-item mb-2"><RouterLink to="/cart" className="nav-link p-0 text-body-secondary">Cart</RouterLink></li>
+                    </ul>
+                  </div>
+                  <div className="col-6 col-md-2 mb-3">
+                    <h5>Categories</h5>
+                    <ul className="nav flex-column">
+                      {categories?.map(category => (
+                        <li className="nav-item mb-2" key={category._id}>
+                          <RouterLink to={`/products?category=${category.name}`} className="nav-link p-0 text-body-secondary">
+                            {category.name}
+                          </RouterLink>
+                        </li>
+                      ))}
+                    </ul>
+                  </div>
+                  <div className="col-md-5 offset-md-1 mb-3">
+                    <form>
+                      <h5>Subscribe to our newsletter</h5>
+                      <p>Monthly digest of what's new and exciting from us.</p>
+                      <div className="d-flex flex-column flex-sm-row w-100 gap-2">
+                        <Button className="coming-soon" disabled>Coming soon</Button>
+                      </div>
+                    </form>
+                  </div>
+                </div>
+                <div className="d-flex flex-column flex-sm-row justify-content-between py-4 my-4 border-top">
+                  <p>Â© 2024 Airneis. All rights reserved.</p>
+                  <ul className="list-unstyled d-flex">
+                    <li className="ms-3"><a className="link-body-emphasis" href="https://twitter.com/airneis"><i className="fab fa-twitter"></i></a></li>
+                    <li className="ms-3"><a className="link-body-emphasis" href="https://instagram.com/airneis"><i className="fab fa-instagram"></i></a></li>
+                    <li className="ms-3"><a className="link-body-emphasis" href="https://facebook.com/airneis"><i className="fab fa-facebook-f"></i></a></li>
+                  </ul>
+                </div>
+                </div>
+              )}
+            </footer>
           )}
-        </footer>
-      </div>
+        </div>
     </>
   )
 }
diff --git a/src/backoffice/components/Table.tsx b/src/backoffice/components/Table.tsx
index a6697ec..594de98 100644
--- a/src/backoffice/components/Table.tsx
+++ b/src/backoffice/components/Table.tsx
@@ -1,6 +1,6 @@
 import React, { useState } from 'react'
 import { Table, Button, Container, Row, Col, Pagination } from 'react-bootstrap'
-import { FaAnglesLeft, FaAngleLeft, FaAngleRight, FaAnglesRight } from 'react-icons/fa6'
+import { FaPlus, FaPen, FaTrash } from 'react-icons/fa6' // Import the icons
 
 export interface Column<T> {
   _id: string
@@ -12,12 +12,13 @@ export interface Column<T> {
 interface TableProps<T> {
   data: T[]
   columns: Column<T>[]
+  onAdd?: () => void
   onEdit?: (item: T) => void
   onDelete?: (item: T) => void
   children?: React.ReactNode
 }
 
-function CustomTable<T>({ data = [], columns, onEdit, onDelete, children }: TableProps<T>) {
+function CustomTable<T>({ data = [], columns, onAdd, onEdit, onDelete, children }: TableProps<T>) {
   const [currentPage, setCurrentPage] = useState(1)
   const itemsPerPage = 10
   const totalItems = data.length
@@ -34,23 +35,27 @@ function CustomTable<T>({ data = [], columns, onEdit, onDelete, children }: Tabl
 
   return (
     <Container fluid>
-      {data.length > 0 && (
-        <Row className='mb-2'>
-          <Col>
-            <Pagination>
-              <Pagination.First onClick={() => handlePageChange(1)} disabled={currentPage === 1} />
-              <Pagination.Prev onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1} />
-              {[...Array(totalPages).keys()].map(page => (
-                <Pagination.Item key={page + 1} active={page + 1 === currentPage} onClick={() => handlePageChange(page + 1)}>
-                  {page + 1}
-                </Pagination.Item>
-              ))}
-              <Pagination.Next onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages} />
-              <Pagination.Last onClick={() => handlePageChange(totalPages)} disabled={currentPage === totalPages} />
-            </Pagination>
-          </Col>
-        </Row>
-      )}
+      <Row className='mb-2'>
+        <Col>
+          {/* Add Button with Icon */}
+          {onAdd && (
+            <Button variant="primary" onClick={onAdd} className="mb-3">
+              <FaPlus />
+            </Button>
+          )}
+          <Pagination>
+            <Pagination.First onClick={() => handlePageChange(1)} disabled={currentPage === 1} />
+            <Pagination.Prev onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1} />
+            {[...Array(totalPages).keys()].map(page => (
+              <Pagination.Item key={page + 1} active={page + 1 === currentPage} onClick={() => handlePageChange(page + 1)}>
+                {page + 1}
+              </Pagination.Item>
+            ))}
+            <Pagination.Next onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages} />
+            <Pagination.Last onClick={() => handlePageChange(totalPages)} disabled={currentPage === totalPages} />
+          </Pagination>
+        </Col>
+      </Row>
       <Row>
         <Col>
           <Table striped bordered hover>
@@ -72,10 +77,10 @@ function CustomTable<T>({ data = [], columns, onEdit, onDelete, children }: Tabl
                   ))}
                   <td>
                     {children}
-                    {onEdit && <Button onClick={() => onEdit(item)}>Edit</Button>}
+                    {onEdit && <Button onClick={() => onEdit(item)}><FaPen /></Button>}
                     {onDelete && (
                       <Button variant='danger' onClick={() => onDelete(item)}>
-                        Delete
+                        <FaTrash />
                       </Button>
                     )}
                   </td>
@@ -89,4 +94,4 @@ function CustomTable<T>({ data = [], columns, onEdit, onDelete, children }: Tabl
   )
 }
 
-export default CustomTable
+export default CustomTable
\ No newline at end of file
diff --git a/src/backoffice/index.tsx b/src/backoffice/index.tsx
index c33a8b0..ce5a31b 100644
--- a/src/backoffice/index.tsx
+++ b/src/backoffice/index.tsx
@@ -9,7 +9,7 @@ export const NavigationSystem = () => {
       <Helmet>
         <title>Backoffice Navigation</title>
       </Helmet>
-      <Nav variant="tabs">
+      <Nav variant="tabs" className='mb-3'>
         <LinkContainer to="/backoffice">
           <Nav.Link>Tableau de Bord</Nav.Link>
         </LinkContainer>
diff --git a/src/backoffice/pages/CarouselList.tsx b/src/backoffice/pages/CarouselList.tsx
index 9b29b26..bd7529f 100644
--- a/src/backoffice/pages/CarouselList.tsx
+++ b/src/backoffice/pages/CarouselList.tsx
@@ -2,6 +2,7 @@ import { useState, useMemo } from "react";
 import { Helmet } from "react-helmet-async";
 import Table from "../components/Table";
 import EditCarouselModal from "../components/EditCarouselModal";
+import CreateCarouselModal from "../components/CreateCarouselModal";
 import {
   useGetCarouselItemsQuery,
   useDeleteCarouselItemMutation,
@@ -17,6 +18,7 @@ const CarouselList = () => {
     refetch: refetchCarouselItems,
   } = useGetCarouselItemsQuery();
   const [showEditModal, setShowEditModal] = useState(false);
+  const [showCreateModal, setShowCreateModal] = useState(false);
   const [currentCarouselItem, setCurrentCarouselItem] =
     useState<CarouselItem | null>(null);
   const queryClient = useQueryClient();
@@ -27,11 +29,24 @@ const CarouselList = () => {
     setShowEditModal(true);
   };
 
+  const openCreateModal = () => {
+    setShowCreateModal(true);
+  };
+
   const handleCarouselUpdate = () => {
     queryClient.refetchQueries({ queryKey: ["getCarouselItems"] });
   };
 
-  const handleDelete = (item: { _id: string; src: string; alt: string; caption: string; }) => {
+  const handleCarouselCreate = () => {
+    queryClient.refetchQueries({ queryKey: ["getCarouselItems"] });
+  };
+
+  const handleDelete = (item: {
+    _id: string;
+    src: string;
+    alt: string;
+    caption: string;
+  }) => {
     deleteCarouselItem(item._id, {
       onSuccess: () => {
         refetchCarouselItems();
@@ -44,7 +59,7 @@ const CarouselList = () => {
 
   const carouselItemsProcessed = useMemo(
     () =>
-      carouselItems?.map(( carouselItem) => ({
+      carouselItems?.map((carouselItem) => ({
         ...carouselItem,
       })) || [],
     [carouselItems]
@@ -90,9 +105,17 @@ const CarouselList = () => {
       <Table
         data={carouselItemsProcessed}
         columns={columns}
+        onAdd={openCreateModal}
         onEdit={openEditModal}
         onDelete={handleDelete}
       />
+      {showCreateModal && (
+        <CreateCarouselModal
+          show={showCreateModal}
+          onHide={() => setShowCreateModal(false)}
+          onCarouselItemCreate={handleCarouselCreate}
+        />
+      )}
       {currentCarouselItem && (
         <EditCarouselModal
           show={showEditModal}
diff --git a/src/backoffice/pages/ProductsList.tsx b/src/backoffice/pages/ProductsList.tsx
index 8e9dfeb..4af95ca 100644
--- a/src/backoffice/pages/ProductsList.tsx
+++ b/src/backoffice/pages/ProductsList.tsx
@@ -2,6 +2,7 @@ import { useState, useMemo } from "react";
 import { Helmet } from "react-helmet-async";
 import Table from "../components/Table";
 import EditProductModal from "../components/EditProductModal";
+import CreateProductModal from "../components/CreateProductModal";
 import {
   useGetProductsQuery,
   useDeleteProductMutation,
@@ -24,6 +25,7 @@ const ProductsList = () => {
   } = useGetCategoriesQuery();
 
   const [showEditModal, setShowEditModal] = useState(false);
+  const [showCreateModal, setShowCreateModal] = useState(false);
   const [currentProduct, setCurrentProduct] = useState<Product | null>(null);
   const queryClient = useQueryClient();
   const { mutate: deleteProduct } = useDeleteProductMutation();
@@ -33,10 +35,18 @@ const ProductsList = () => {
     setShowEditModal(true);
   };
 
+  const handleCreate = () => {
+    setShowCreateModal(true);
+  }
+
   const handleProductUpdate = () => {
     queryClient.refetchQueries({ queryKey: ["getProducts"] });
   };
 
+  const handleProductCreate = () => {
+    queryClient.refetchQueries({ queryKey: ["getProducts"] });
+  }
+
   const handleDelete = async (product: Product) => {
     deleteProduct(product._id, {
       onSuccess: () => {
@@ -102,8 +112,16 @@ const ProductsList = () => {
         data={adjustedProducts}
         columns={columns}
         onEdit={handleEdit}
+        onAdd={handleCreate}
         onDelete={handleDelete}
       />
+      {showCreateModal && (
+        <CreateProductModal
+          show={showCreateModal}
+          onHide={() => setShowCreateModal(false)}
+          onProductCreate={handleProductCreate}
+        />
+      )}
       {currentProduct && categories && (
         <EditProductModal
           show={showEditModal}
diff --git a/src/backoffice/pages/UsersList.tsx b/src/backoffice/pages/UsersList.tsx
index b903c0b..b38284b 100644
--- a/src/backoffice/pages/UsersList.tsx
+++ b/src/backoffice/pages/UsersList.tsx
@@ -2,7 +2,8 @@ import { useState, useMemo } from "react";
 import { Helmet } from "react-helmet-async";
 import Table from "../components/Table";
 import EditUserModal from "../components/EditUserModal";
-import { useGetUsersQuery } from "../../hooks/userHook";
+import CreateUserModal from "../components/CreateUserModal";
+import { useGetUsersQuery, useDeleteUserMutation } from "../../hooks/userHook";
 import { UserInfo } from "../../types/UserInfo";
 import { useQueryClient } from "@tanstack/react-query";
 
@@ -11,17 +12,35 @@ const UsersList = () => {
   const [selectedUsers] = useState<string[]>([]);
   const [showEditModal, setShowEditModal] = useState(false);
   const [currentUser, setCurrentUser] = useState<UserInfo | null>(null);
+  const [showCreateModal, setShowCreateModal] = useState(false);
   const queryClient = useQueryClient();
+  const deleteUserMutation = useDeleteUserMutation();
 
   const openEditModal = (user: UserInfo) => {
     setCurrentUser(user);
     setShowEditModal(true);
   };
 
+  const openCreateModal = () => {
+    setShowCreateModal(true);
+  };
+
   const handleUserUpdate = () => {
     queryClient.invalidateQueries({ queryKey: ["getUsers"] });
   };
 
+  const handleUserCreate = () => {
+    queryClient.invalidateQueries({ queryKey: ["getUsers"] });
+  };
+
+  const handleUserDelete = (user: UserInfo) => {
+    deleteUserMutation.mutate(user._id, {
+      onSuccess: () => {
+        queryClient.invalidateQueries({ queryKey: ["getUsers"] });
+      },
+    });
+  };
+
   const usersWithSelection = useMemo(
     () =>
       users?.map((user) => ({
@@ -54,7 +73,16 @@ const UsersList = () => {
         data={usersWithSelection}
         columns={columns}
         onEdit={openEditModal}
+        onAdd={openCreateModal}
+        onDelete={handleUserDelete} // Pass the delete function
       />
+      {showCreateModal && (
+        <CreateUserModal
+          show={showCreateModal}
+          onHide={() => setShowCreateModal(false)}
+          onUserCreate={handleUserCreate}
+        />
+      )}
       {currentUser && (
         <EditUserModal
           show={showEditModal}
diff --git a/src/hooks/productHook.ts b/src/hooks/productHook.ts
index de20a49..5c22ac6 100644
--- a/src/hooks/productHook.ts
+++ b/src/hooks/productHook.ts
@@ -108,3 +108,28 @@ export const useDeleteProductMutation = () => {
   })
 }
 
+export const useCreateProductMutation = () => {
+  return useMutation<Product, Error, Product, unknown>({
+    mutationFn: async (product: Product): Promise<Product> => {
+      console.log('Creating product:', product);
+      const response = await apiClient.post<Product>('api/products', {
+        name: product.name,
+        URLimage: product.URLimage,
+        slug: product.slug,
+        categoryId: product.category?._id,
+        description: product.description,
+        materials: product.materials,
+        price: product.price,
+        _id: product._id,
+      });
+      console.log('Product created successfully:', response.data);
+      return response.data;
+    },
+    onError: (error: Error) => {
+      console.error('Error creating product:', error);
+    },
+    onSuccess: (data: Product) => {
+      console.log('Product creation successful:', data);
+    },
+  });
+}
\ No newline at end of file
diff --git a/src/hooks/userHook.ts b/src/hooks/userHook.ts
index 2b96724..02d48af 100644
--- a/src/hooks/userHook.ts
+++ b/src/hooks/userHook.ts
@@ -93,4 +93,12 @@ export const useUpdateUserMutation = () => {
       return (await apiClient.put(`api/users/${user._id}`, user)).data
     },
   })
+}
+
+export const useDeleteUserMutation = () => {
+  return useMutation({
+    mutationFn: async (userId: string) => {
+      return (await apiClient.delete(`api/users/${userId}`)).data
+    },
+  })
 }
\ No newline at end of file
diff --git a/src/index.css b/src/index.css
index eded10c..da40f44 100644
--- a/src/index.css
+++ b/src/index.css
@@ -25,7 +25,7 @@ footer {
   -webkit-text-size-adjust: 100%;
 }
 
-a.my-link {
+a {
   text-decoration: none;
   color: inherit;
 }
diff --git a/src/types/Product.ts b/src/types/Product.ts
index a4c63f6..2b7cf91 100644
--- a/src/types/Product.ts
+++ b/src/types/Product.ts
@@ -1,14 +1,14 @@
 import { Category } from './Category'
 
 export type Product = {
-  _id: string
+  _id?: string
   name: string
   slug: string
   URLimage: string
   category?: Category
-  price: number
   description: string
   materials: string[]
+  price: number
   stock?: number
   priority?: boolean
 }
diff --git a/src/types/User.ts b/src/types/User.ts
index e8a16d5..3d7adba 100644
--- a/src/types/User.ts
+++ b/src/types/User.ts
@@ -2,6 +2,7 @@ export type User = {
   _id: string
   name: string
   email: string
+  password: string
   isAdmin: boolean
   token: string
 }
